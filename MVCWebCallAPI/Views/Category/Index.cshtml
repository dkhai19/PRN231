@using MVCWebCallAPI.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "HomePage";
    var cates = ViewBag.category as List<CategoryViewModel>;
    var prods = ViewBag.product as List<ProductViewModel>;
}

<h1>Home Page</h1>
List category: 
<select>
    @foreach(var item in @cates)
    {
        <option value="@item.CategoryId">@item.CategoryName</option>
    }
</select>
<br />
<br />
<a asp-action="CreateCategory">Create new category</a>
<br />
<br />

<table class="table" width="50%" border="1">
    <thead>
        <tr>
            <th>Product ID</th>
            <th>Product Name</th>
            <th>Price </th>
            <th>Quantity</th>
            <th>Category Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in @prods)
        {
            <tr>
                <td><a style="text-decoration:none;" asp-controller="Category" asp-route-id="@item.ProductId" asp-action="UpdateProduct">@item.ProductId</a></td>
                <td>@item.ProductName</td>
                <td>@item.UnitPrice</td>
                <td>@item.UnitsInStock</td>
                @foreach(var check in @cates)
                {
                    if(@item.CategoryId == @check.CategoryId)
                    {
                        <td>@check.CategoryName</td>
                    }
                }
                <td><a asp-controller="Category" asp-action="DeleteProduct" asp-route-id="@item.ProductId">Delete</a></td>
            </tr>            
        }
    </tbody>
</table>
<br />
<br />
<a asp-action="CreateProduct">Create new Product</a>

